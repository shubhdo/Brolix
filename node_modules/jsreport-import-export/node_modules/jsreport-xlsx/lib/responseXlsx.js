'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = responseXlsx;

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

var _streamToArray = require('stream-to-array');

var _streamToArray2 = _interopRequireDefault(_streamToArray);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var toArrayAsync = _bluebird2.default.promisify(_streamToArray2.default);

var preview = function preview(request, response, options) {
  return new _bluebird2.default(function (resolve, reject) {
    var req = _request2.default.post(options.publicUriForPreview || 'http://jsreport.net/temp', function (err, resp, body) {
      if (err) {
        return reject(err);
      }
      var iframe = '<iframe style="height:100%;width:100%" src="https://view.officeapps.live.com/op/view.aspx?src=' + encodeURIComponent((options.publicUriForPreview || 'http://jsreport.net/temp') + '/' + body) + '" />';
      var title = request.template.name || 'jsreport';
      var html = '<html><head><title>' + title + '</title><body>' + iframe + '</body></html>';
      response.content = new Buffer(html);
      response.headers['Content-Type'] = 'text/html';
      // sometimes files is not completely flushed and excel online cannot find it immediately
      setTimeout(function () {
        resolve();
      }, 500);
    });

    var form = req.form();
    form.append('file', response.stream);
    response.headers['Content-Type'] = 'text/html';
  });
};

function responseXlsx(request, response) {
  var options = request.reporter.options.xlsx || {};
  if (request.options.preview && options.previewInExcelOnline !== false) {
    return preview(request, response, options);
  }

  response.headers['Content-Type'] = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
  response.headers['Content-Disposition'] = 'inline; filename="report.xlsx"';
  response.headers['File-Extension'] = 'xlsx';

  return toArrayAsync(response.stream).then(function (buf) {
    response.content = Buffer.concat(buf);
  });
}