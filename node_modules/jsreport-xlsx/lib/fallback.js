'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = fallback;

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _msexcelBuilderExtended = require('msexcel-builder-extended');

var _msexcelBuilderExtended2 = _interopRequireDefault(_msexcelBuilderExtended);

var _responseXlsx = require('./responseXlsx.js');

var _responseXlsx2 = _interopRequireDefault(_responseXlsx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fallback(previousError, request, response) {
  var generationId = _uuid2.default.v1();

  var result = response.content.toString();
  var workbook = _msexcelBuilderExtended2.default.createWorkbook(request.reporter.options.tempDirectory, generationId + '.xlsx');

  var start = result.indexOf('<worksheet');
  var sheetNumber = 1;
  while (start >= 0) {
    var worksheet = "<?xml version='1.0' encoding='UTF-8' standalone='yes'?>" + result.substring(start, result.indexOf('</worksheet>', start) + '</worksheet>'.length, start);

    var startSheetName = worksheet.indexOf('name=');
    var sheetName = 'Sheet ' + sheetNumber.toString();
    if (startSheetName > 0 && startSheetName < worksheet.indexOf('>', worksheet.indexOf('<worksheet'))) {
      var s = startSheetName + 'name="'.length;
      var e = worksheet.indexOf('"', s);
      sheetName = worksheet.substring(s, e);
    }
    var sheet1 = workbook.createSheet(sheetName, 0, 0);
    sheet1.raw(worksheet);
    sheetNumber = sheetNumber + 1;
    start = result.indexOf('<worksheet', start + 1);
  }

  if (result.indexOf('<styleSheet') > 0) {
    var stylesheet = "<?xml version='1.0' encoding='UTF-8' standalone='yes'?>" + result.substring(result.indexOf('<styleSheet'), result.indexOf('</styleSheet>') + '</styleSheet>'.length);
    workbook.st.raw(stylesheet);
  }

  return _bluebird2.default.promisify(workbook.save).call(workbook).then(function () {
    response.stream = _fs2.default.createReadStream(_path2.default.join(request.reporter.options.tempDirectory, generationId + '.xlsx'));
    return (0, _responseXlsx2.default)(request, response);
  }).catch(function (e) {
    var error = new Error('Unable to parse xlsx template JSON string (maybe you are missing {{{xlsxPrint}}} at the end?): \n' + response.content.toString().substring(0, 100) + '...');
    error.weak = true;
    throw error;
  });
};