/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _ImageEditor = __webpack_require__(1);
	
	var _ImageEditor2 = _interopRequireDefault(_ImageEditor);
	
	var _ImageUploadButton = __webpack_require__(3);
	
	var _ImageUploadButton2 = _interopRequireDefault(_ImageUploadButton);
	
	var _jsreportStudio = __webpack_require__(4);
	
	var _jsreportStudio2 = _interopRequireDefault(_jsreportStudio);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	_jsreportStudio2.default.addEntitySet({
	  name: 'images',
	  faIcon: 'fa-camera',
	  visibleName: 'image',
	  onNew: _ImageUploadButton2.default.OpenUpload,
	  helpUrl: 'http://jsreport.net/learn/images',
	  entityTreePosition: 600
	});
	
	_jsreportStudio2.default.addEditorComponent('images', _ImageEditor2.default);
	_jsreportStudio2.default.addToolbarComponent(_ImageUploadButton2.default);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ImageEditor = function (_Component) {
	  _inherits(ImageEditor, _Component);
	
	  function ImageEditor() {
	    _classCallCheck(this, ImageEditor);
	
	    return _possibleConstructorReturn(this, (ImageEditor.__proto__ || Object.getPrototypeOf(ImageEditor)).apply(this, arguments));
	  }
	
	  _createClass(ImageEditor, [{
	    key: 'render',
	    value: function render() {
	      var entity = this.props.entity;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'custom-editor' },
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'h1',
	            null,
	            _react2.default.createElement('i', { className: 'fa fa-camera' }),
	            ' ',
	            entity.name
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'div',
	            null,
	            'Embed into a html based template using data uri scheme:',
	            _react2.default.createElement(
	              'code',
	              null,
	              _react2.default.createElement(
	                'h2',
	                { style: { textTransform: 'none' } },
	                '<img src=\'',
	                '{#image ' + entity.name + "}'",
	                '/>'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'div',
	            null,
	            'Embed using raw base64 encoding:',
	            _react2.default.createElement(
	              'code',
	              null,
	              _react2.default.createElement(
	                'h2',
	                { style: { textTransform: 'none' } },
	                '{#image ' + entity.name + ' @encoding=base64}'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { style: { overflow: 'auto' } },
	          _react2.default.createElement('img', { src: 'data:' + entity.contentType + ';base64,' + entity.content, style: { display: 'block', margin: '3rem auto' } })
	        )
	      );
	    }
	  }]);
	
	  return ImageEditor;
	}(_react.Component);
	
	ImageEditor.propTypes = {
	  entity: _react2.default.PropTypes.object.isRequired
	};
	exports.default = ImageEditor;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = Studio.libraries['react'];

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _jsreportStudio = __webpack_require__(4);
	
	var _jsreportStudio2 = _interopRequireDefault(_jsreportStudio);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _imageUploadButton = void 0;
	
	var ImageUploadButton = function (_Component) {
	  _inherits(ImageUploadButton, _Component);
	
	  function ImageUploadButton() {
	    _classCallCheck(this, ImageUploadButton);
	
	    return _possibleConstructorReturn(this, (ImageUploadButton.__proto__ || Object.getPrototypeOf(ImageUploadButton)).apply(this, arguments));
	  }
	
	  _createClass(ImageUploadButton, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      _imageUploadButton = this;
	    }
	  }, {
	    key: 'upload',
	    value: function upload(e) {
	      var _this2 = this;
	
	      if (!e.target.files.length) {
	        return;
	      }
	
	      var file = e.target.files[0];
	      var reader = new FileReader();
	
	      reader.onloadend = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
	        var response, entity;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _this2.refs.file.value = '';
	                // playground/workspaces extension needs to save the new version
	                // so uploading of the new image goes into it
	
	                if (!_jsreportStudio2.default.workspaces) {
	                  _context.next = 4;
	                  break;
	                }
	
	                _context.next = 4;
	                return _jsreportStudio2.default.workspaces.save();
	
	              case 4:
	                if (!_this2.forNew) {
	                  _context.next = 13;
	                  break;
	                }
	
	                _context.next = 7;
	                return _jsreportStudio2.default.api.post('/api/image', {
	                  attach: { filename: 'file.png', file: file }
	                });
	
	              case 7:
	                response = _context.sent;
	                entity = {
	                  __entitySet: 'images',
	                  _id: response._id,
	                  name: response.name,
	                  shortid: response.shortid
	                };
	
	
	                _jsreportStudio2.default.addExistingEntity(entity);
	                _jsreportStudio2.default.openTab(Object.assign({}, entity));
	                _context.next = 16;
	                break;
	
	              case 13:
	                _context.next = 15;
	                return _jsreportStudio2.default.api.post('/api/image/' + _this2.props.tab.entity.shortid, {
	                  attach: { filename: 'file.png', file: file }
	                });
	
	              case 15:
	
	                _jsreportStudio2.default.loadEntity(_this2.props.tab.entity._id, true);
	
	              case 16:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this2);
	      }));
	
	      reader.onerror = function () {
	        alert('There was an error reading the file!');
	      };
	
	      reader.readAsBinaryString(file);
	    }
	  }, {
	    key: 'openFileDialog',
	    value: function openFileDialog(forNew) {
	      this.forNew = forNew;
	
	      this.refs.file.dispatchEvent(new MouseEvent('click', {
	        'view': window,
	        'bubbles': false,
	        'cancelable': true
	      }));
	    }
	  }, {
	    key: 'renderUpload',
	    value: function renderUpload() {
	      var _this3 = this;
	
	      return _react2.default.createElement('input', { type: 'file', key: 'file', ref: 'file', style: { display: 'none' }, onChange: function onChange(e) {
	          return _this3.upload(e);
	        }, accept: 'image/*' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      if (!this.props.tab || !this.props.tab.entity || this.props.tab.entity.__entitySet !== 'images') {
	        return this.renderUpload(true);
	      }
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'toolbar-button', onClick: function onClick() {
	            _this4.openFileDialog();
	          } },
	        _react2.default.createElement('i', { className: 'fa fa-cloud-upload' }),
	        'Upload',
	        this.renderUpload()
	      );
	    }
	  }], [{
	    key: 'OpenUpload',
	
	
	    // we need to have global action in main_dev which is triggered when users clicks on + on images
	    // this triggers invisible button in the toolbar
	    value: function OpenUpload() {
	      _imageUploadButton.openFileDialog(true);
	    }
	  }]);
	
	  return ImageUploadButton;
	}(_react.Component);
	
	ImageUploadButton.propTypes = {
	  tab: _react2.default.PropTypes.object,
	  onUpdate: _react2.default.PropTypes.func.isRequired
	};
	exports.default = ImageUploadButton;

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = Studio;

/***/ }
/******/ ]);