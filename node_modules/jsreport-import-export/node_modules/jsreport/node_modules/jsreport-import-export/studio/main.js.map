{"version":3,"sources":["webpack:///webpack/bootstrap 76e73d47cc2bae7113f3","webpack:///./studio/main_dev.js","webpack:///./studio/ExportModal.js","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///./studio/ImportModal.js"],"names":["addToolbarComponent","props","openModal","ExportModal","selections","references","getReferences","Object","keys","forEach","k","e","_id","setState","es","v","updates","api","post","data","selection","state","filter","responseType","response","saveAs","alert","message","stack","assign","__selected","height","overflow","getActiveEntity","handleNodeSelect","download","ImportModal","target","files","length","file","reader","FileReader","onloadend","refs","value","attach","filename","result","status","log","onerror","readAsArrayBuffer","confirm","location","reload","dispatchEvent","MouseEvent","window","display","upload","openFileDialog","width","boxSizing","import"],"mappings":"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","file":"./studio/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 76e73d47cc2bae7113f3\n **/","import ExportModal from './ExportModal.js'\nimport ImportModal from './ImportModal.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addToolbarComponent((props) => <div\n  className='toolbar-button' onClick={() => Studio.openModal(ExportModal)}><i className='fa fa-download' /> Export</div>, 'settings')\n\nStudio.addToolbarComponent((props) => <div\n  className='toolbar-button' onClick={() => Studio.openModal(ImportModal)}><i className='fa fa-upload' /> Import</div>, 'settings')\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/main_dev.js\n **/","import React, {Component} from 'react'\nimport Studio, { EntityTree } from 'jsreport-studio'\nimport fileSaver from 'filesaver.js-npm'\n\nexport default class ExportModal extends Component {\n  componentWillMount () {\n    let selections = {}\n\n    var references = Studio.getReferences()\n    Object.keys(references).forEach((k) => {\n      Object.keys(references[k]).forEach((e) => (selections[references[k][e]._id] = true))\n    })\n    this.setState(selections)\n  }\n\n  handleNodeSelect (references, es, v) {\n    let updates = {}\n    references[es].forEach((e) => {\n      updates[e._id] = v\n    })\n\n    this.setState(updates)\n  }\n\n  async download () {\n    try {\n      let response = await Studio.api.post('api/export', {\n        data: {\n          selection: Object.keys(this.state).filter((k) => this.state[k])\n        },\n        responseType: 'blob'\n      })\n\n      fileSaver.saveAs(response, 'export.zip')\n    } catch (e) {\n      alert('Unable to prepare export ' + e.message + ' ' + e.stack)\n    }\n  }\n\n  render () {\n    let references = Studio.getReferences()\n    Object.keys(references).forEach((k) => {\n      Object.keys(references[k]).forEach((e) => (references[k][e] = Object.assign({}, references[k][e], { __selected: this.state[references[k][e]._id] })))\n    })\n\n    return <div className='form-group'>\n      <div><h1><i className='fa fa-download' /> Export objects</h1></div>\n      <div style={{height: '30rem', overflow: 'auto'}}>\n        <EntityTree\n          activeEntity={Studio.getActiveEntity()}\n          entities={references}\n          selectable\n          onNodeSelect={(es, v) => this.handleNodeSelect(references, es, v)}\n          onSelect={(e, v) => this.setState({ [e._id]: !this.state[e._id] })}\n          />\n      </div>\n      <div className='button-bar'>\n        <a className='button confirmation' onClick={() => this.download()}>\n          Download\n        </a>\n      </div>\n    </div>\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/ExportModal.js\n **/","module.exports = Studio.libraries['react'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['react']\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = Studio;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = Studio.libraries['filesaver.js-npm'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['filesaver.js-npm']\"\n ** module id = 4\n ** module chunks = 0\n **/","import React, {Component} from 'react'\nimport Studio from 'jsreport-studio'\n\nexport default class ImportModal extends Component {\n  upload (e) {\n    if (!e.target.files.length) {\n      return\n    }\n\n    this.file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.onloadend = async () => {\n      this.refs.file.value = ''\n\n      try {\n        const result = await Studio.api.post('api/validate-import', {\n          attach: { filename: 'import.zip', file: this.file }\n        })\n        this.setState(result)\n      } catch (e) {\n        this.setState({\n          status: 1,\n          log: e.message + ' ' + e.stack\n        })\n      }\n    }\n\n    reader.onerror = function () {\n      alert('There was an error reading the file!')\n    }\n\n    reader.readAsArrayBuffer(this.file)\n  }\n\n  async import () {\n    try {\n      this.setState({\n        status: 1,\n        log: 'Working on import....'\n      })\n      await Studio.api.post('api/import', {\n        attach: { filename: 'import.zip', file: this.file }\n      })\n    } catch (e) {\n      return this.setState({\n        status: 1,\n        log: e.message + ' ' + e.stack\n      })\n    }\n\n    confirm('Import successfull. We need to reload the studio.')\n    location.reload()\n  }\n\n  openFileDialog () {\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\n      'view': window,\n      'bubbles': false,\n      'cancelable': true\n    }))\n  }\n\n  render () {\n    return <div>\n      <input type='file' key='file' ref='file' style={{display: 'none'}} onChange={(e) => this.upload(e)} />\n\n      <h1><i className='fa fa-upload' /> Import objects</h1>\n\n      <div className='form-group'>\n        <p>\n          You can safely upload the exported package and review the changes which will be performed. Afterwards you can\n          reject or perform the import.\n        </p>\n\n        <div className='button-bar'>\n          <a className='button confirmation' onClick={() => this.openFileDialog()}>\n            Validate\n          </a>\n        </div>\n      </div>\n\n      {this.state ? <div className='form-group'>\n        <div>\n          <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={this.state.log} />\n        </div>\n\n        <div className='button-bar'>\n          <a className='button confirmation' onClick={() => this.import()}>\n            Import\n          </a>\n        </div>\n      </div> : <div />}\n    </div>\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/ImportModal.js\n **/"],"sourceRoot":""}