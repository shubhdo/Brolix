{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f3464588b0f12bfe1bc3","webpack:///./src/index.js","webpack:///./src/Component.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/copy-to-clipboard/index.js","webpack:///./~/toggle-selection/index.js"],"names":["require","CopyToClipboard","module","exports","createClass","propTypes","text","PropTypes","string","isRequired","children","element","onCopy","func","options","shape","debug","bool","message","onClick","event","props","elem","Children","only","result","render","_text","_onCopy","_options","cloneElement"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;gBCtC0B,mBAAAA,CAAQ,CAAR,C;KAAnBC,e,YAAAA,e;;AAEPC,QAAOC,OAAP,GAAiBF,eAAjB,C;;;;;;;;;;;;;;;ACFA;;;;AACA;;;;;;;;AAGO,KAAMA,kBAAkB,gBAAMG,WAAN,CAAkB;AAAA;;AAC/CC,cAAW;AACTC,WAAM,gBAAMC,SAAN,CAAgBC,MAAhB,CAAuBC,UADpB;AAETC,eAAU,gBAAMH,SAAN,CAAgBI,OAAhB,CAAwBF,UAFzB;AAGTG,aAAQ,gBAAML,SAAN,CAAgBM,IAHf;AAITC,cAAS,gBAAMP,SAAN,CAAgBQ,KAAhB,CAAsB;AAC7BC,cAAO,gBAAMT,SAAN,CAAgBU,IADM;AAE7BC,gBAAS,gBAAMX,SAAN,CAAgBC;AAFI,MAAtB;AAJA,IADoC;;AAY/CW,UAZ+C,mBAYvCC,KAZuC,EAYhC;AAAA,kBAMT,KAAKC,KANI;AAAA,SAEXf,IAFW,UAEXA,IAFW;AAAA,SAGXM,MAHW,UAGXA,MAHW;AAAA,SAIXF,QAJW,UAIXA,QAJW;AAAA,SAKXI,OALW,UAKXA,OALW;;;AAQb,SAAMQ,OAAO,gBAAMC,QAAN,CAAeC,IAAf,CAAoBd,QAApB,CAAb;;AAEA,SAAMe,SAAS,+BAAKnB,IAAL,EAAWQ,OAAX,CAAf;;AAEA,SAAIF,MAAJ,EAAY;AACVA,cAAON,IAAP,EAAamB,MAAb;AACD;;AAED;AACA,SAAIH,QAAQA,KAAKD,KAAb,IAAsB,OAAOC,KAAKD,KAAL,CAAWF,OAAlB,KAA8B,UAAxD,EAAoE;AAClEG,YAAKD,KAAL,CAAWF,OAAX,CAAmBC,KAAnB;AACD;AACF,IAhC8C;AAmC/CM,SAnC+C,oBAmCtC;AAAA,mBAOH,KAAKL,KAPF;AAAA,SAECM,KAFD,WAELrB,IAFK;AAAA,SAGGsB,OAHH,WAGLhB,MAHK;AAAA,SAIIiB,QAJJ,WAILf,OAJK;AAAA,SAKLJ,QALK,WAKLA,QALK;AAAA,SAMFW,KANE;;AAQP,SAAMC,OAAO,gBAAMC,QAAN,CAAeC,IAAf,CAAoBd,QAApB,CAAb;;AAEA,YAAO,gBAAMoB,YAAN,CAAmBR,IAAnB,eAA6BD,KAA7B,IAAoCF,SAAS,KAAKA,OAAlD,IAAP;AACD;AA9C8C,EAAlB,CAAxB;;;;;;;ACJP,gD;;;;;;ACAA;;AAEA;;AAEA,4CAA2C,IAAI;;AAE/C;AACA;AACA,6BAA4B,UAAU;AACtC;;AAEA;AACA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;;AAEA,0CAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA","file":"react-copy-to-clipboard.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CopyToClipboard\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"CopyToClipboard\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3464588b0f12bfe1bc3","const {CopyToClipboard} = require('./Component');\n\nmodule.exports = CopyToClipboard;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\n\nexport const CopyToClipboard = React.createClass({\n  propTypes: {\n    text: React.PropTypes.string.isRequired,\n    children: React.PropTypes.element.isRequired,\n    onCopy: React.PropTypes.func,\n    options: React.PropTypes.shape({\n      debug: React.PropTypes.bool,\n      message: React.PropTypes.string\n    })\n  },\n\n\n  onClick(event) {\n    const {\n      text,\n      onCopy,\n      children,\n      options\n    } = this.props;\n\n    const elem = React.Children.only(children);\n\n    const result = copy(text, options);\n\n    if (onCopy) {\n      onCopy(text, result);\n    }\n\n    // Bypass onClick if it was present\n    if (elem && elem.props && typeof elem.props.onClick === 'function') {\n      elem.props.onClick(event);\n    }\n  },\n\n\n  render() {\n    const {\n      text: _text,\n      onCopy: _onCopy,\n      options: _options,\n      children,\n      ...props\n    } = this.props;\n    const elem = React.Children.only(children);\n\n    return React.cloneElement(elem, {...props, onClick: this.onClick});\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? 'âŒ˜' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    mark.setAttribute('style', [\n      // reset user styles for span element\n      'all: unset',\n      // prevents scrolling to the end of the page\n      'position: fixed',\n      'top: 0',\n      'clip: rect(0, 0, 0, 0)',\n      // used to preserve spaces and line breaks\n      'white-space: pre',\n      // do not inherit user-select (it may be `none`)\n      '-webkit-user-select: text',\n      '-moz-user-select: text',\n      '-ms-user-select: text',\n      'user-select: text',\n    ].join(';'));\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/copy-to-clipboard/index.js\n// module id = 3\n// module chunks = 0","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/toggle-selection/index.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}